# -*- coding: utf-8 -*-
#This is the UI page for scout input
import wx
import csv
import os
import module_locator
import json
import requests
from datetime import datetime
from pathlib2 import Path
from shutil import copyfile
import random

#locate the Package
myPath = module_locator.module_path()

#import match schedule from json generated by PullMatchSchedule.py
matchSchedule = json.load(open(myPath + "/matchSchedule.json","r"))
# print matchSchedule[0]["alliances"]["red"]["team_keys"]
ScoutingDir = os.environ['HOME']+"/Public/ScoutingData"
# print ScoutingDir
if not os.path.exists(ScoutingDir):
    os.makedirs(ScoutingDir)


leftColor = "Red"
rightColor = "Blue"

divisionsDict = {"Archimedes Division":"2018arc","Carson Division":"2018cars","Curie Division":"2018cur","Daly Division":"2018dal","Darwin Division":"2018dar","Tesla Division":"2018tes"}
allianceDict = {}

class Panel(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent)

        dom = wx.Image(myPath + "/Scouting.png", wx.BITMAP_TYPE_ANY).ConvertToBitmap()
        dom.SetSize((900,700))
        self.dompic = wx.StaticBitmap(self, -1, dom, (0, 0), ((dom.GetWidth()), (dom.GetHeight())))
        self.dompic.Hide()

        self.boldFont = wx.Font(18, wx.DEFAULT, wx.BOLD, wx.NORMAL)
        #Identifiers
        self.nameTitle = wx.StaticText(self, label="Name", pos=(20, 30))
        self.nameInput = wx.TextCtrl(self, pos=(120, 30), size = (100, 20))
        self.divisionTitle = wx.StaticText(self, label="Division", pos=(20, 50))
        self.divisionInput = wx.ComboBox(self, pos=(120, 50), size = (200, 25), style=wx.CB_READONLY)
        for key in divisionsDict:
            self.divisionInput.Append(key)

        self.allianceTitle = wx.StaticText(self, label="Alliance", pos=(380, 50))
        self.allianceInput = wx.ComboBox(self, pos=(450, 50), size = (300, 25), style=wx.CB_READONLY)

        self.match = wx.StaticText(self, label="Match", pos=(380,30))
        self.matchLevel = wx.ComboBox(self, pos=(450,30),size=(50,25), style=wx.CB_READONLY)
        self.matchLevel.Append("QF")
        self.matchLevel.Append("SF")
        self.matchLevel.Append("F")
        self.matchLevelNum = wx.TextCtrl(self, pos=(500,30),size=(20,20))
        self.matchmatch = wx.StaticText(self, label="Match", pos=(540,30))
        self.matchNum = wx.TextCtrl(self, pos=(595,30),size=(20,20))

        self.autonTitle = wx.StaticText(self, label="Auton", pos=(20, 80))
        self.autonTitle.SetFont(self.boldFont)

        png = wx.Image(myPath + "/FieldConfig.png", wx.BITMAP_TYPE_ANY).ConvertToBitmap()
        png.SetSize((220,220))
        wx.StaticBitmap(self, -1, png, (20, 120), ((png.GetWidth()), (png.GetHeight())))
        self.question = wx.StaticText(self, label="Auton ROBOT Configuration", pos=(20, 100))
        # self.driverstation = wx.StaticText(self, label="DRIVERSTATION", pos=(70, 300))

        self.team1 = wx.ComboBox(self, pos=(45, 250), size = (60, 25), style=wx.CB_READONLY)
        self.team2 = wx.ComboBox(self, pos=(115, 250), size = (60, 25), style=wx.CB_READONLY)
        self.team3 = wx.ComboBox(self, pos=(180, 250), size = (60, 25), style=wx.CB_READONLY)

        self.team1Title = wx.StaticText(self, label="0000", pos=(20, 360))
        self.team2Title = wx.StaticText(self, label="0000", pos=(20, 380))
        self.team3Title = wx.StaticText(self, label="0000", pos=(20, 400))

        self.switchCubeTitle = wx.StaticText(self, label="Switch", pos=(80, 340))
        self.scaleCubeTitle = wx.StaticText(self, label="Scale", pos=(200, 340))

        self.team1SwitchInput = wx.TextCtrl(self, pos=(80, 360), size=(30,20))
        self.team1SwitchInput.AppendText("0")
        self.team1SwitchInputUp = wx.Button(self, label="+", pos=(120, 357.5), size=(25,25), name="team1SwitchInputUp")
        self.team1SwitchInputDown = wx.Button(self, label="-", pos=(150, 357.5), size=(25,25), name="team1SwitchInputDown")

        self.team2SwitchInput = wx.TextCtrl(self, pos=(80, 380), size=(30,20))
        self.team2SwitchInput.AppendText("0")
        self.team2SwitchInputUp = wx.Button(self, label="+", pos=(120, 377.5), size=(25,25), name="team2SwitchInputUp")
        self.team2SwitchInputDown = wx.Button(self, label="-", pos=(150, 377.5), size=(25,25), name="team2SwitchInputDown")

        self.team3SwitchInput = wx.TextCtrl(self, pos=(80, 400), size=(30,20))
        self.team3SwitchInput.AppendText("0")
        self.team3SwitchInputUp = wx.Button(self, label="+", pos=(120, 397.5), size=(25,25), name="team3SwitchInputUp")
        self.team3SwitchInputDown = wx.Button(self, label="-", pos=(150, 397.5), size=(25,25), name="team3SwitchInputDown")

        self.team1ScaleInput = wx.TextCtrl(self, pos=(200, 360), size=(30,20))
        self.team1ScaleInput.AppendText("0")
        self.team1ScaleInputUp = wx.Button(self, label="+", pos=(240, 357.5), size=(25,25), name="team1ScaleInputUp")
        self.team1ScaleInputDown = wx.Button(self, label="-", pos=(270, 357.5), size=(25,25), name="team1ScaleInputDown")

        self.team2ScaleInput = wx.TextCtrl(self, pos=(200, 380), size=(30,20))
        self.team2ScaleInput.AppendText("0")
        self.team2ScaleInputUp = wx.Button(self, label="+", pos=(240, 377.5), size=(25,25), name="team2ScaleInputUp")
        self.team2ScaleInputDown = wx.Button(self, label="-", pos=(270, 377.5), size=(25,25), name="team2ScaleInputDown")

        self.team3ScaleInput = wx.TextCtrl(self, pos=(200, 400), size=(30,20))
        self.team3ScaleInput.AppendText("0")
        self.team3ScaleInputUp = wx.Button(self, label="+", pos=(240, 397.5), size=(25,25), name="team3ScaleInputUp")
        self.team3ScaleInputDown = wx.Button(self, label="-", pos=(270, 397.5), size=(25,25), name="team3ScaleInputDown")


        self.divisionInput.Bind(wx.EVT_COMBOBOX, self.Alliance_Match)
        self.allianceInput.Bind(wx.EVT_COMBOBOX, self.Auton_Config)
        self.team1.Bind(wx.EVT_COMBOBOX, self.Team_Display)
        self.team2.Bind(wx.EVT_COMBOBOX, self.Team_Display)
        self.team3.Bind(wx.EVT_COMBOBOX, self.Team_Display)

        self.team1SwitchInputUp.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team1SwitchInputDown.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team2SwitchInputUp.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team2SwitchInputDown.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team3SwitchInputUp.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team3SwitchInputDown.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team1ScaleInputUp.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team1ScaleInputDown.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team2ScaleInputUp.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team2ScaleInputDown.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team3ScaleInputUp.Bind(wx.EVT_BUTTON, self.Number_Change)
        self.team3ScaleInputDown.Bind(wx.EVT_BUTTON, self.Number_Change)

        self.teleOpTitle = wx.StaticText(self, label="TeleOp", pos=(300, 80))
        self.teleOpTitle.SetFont(self.boldFont)
        self.teleOpDirection = wx.StaticText(self, label="The robot spends the most time on doing?", pos=(300, 100))

        self.scale = wx.StaticText(self,label="Scale", pos=(300, 160))
        self.switch = wx.StaticText(self,label="Switch", pos=(300, 180))
        self.climb = wx.StaticText(self,label="Climb", pos=(300, 200))
        self.exchange = wx.StaticText(self,label="Exchange", pos=(300, 220))
        self.defense = wx.StaticText(self,label="Defense", pos=(300, 240))
        self.helping = wx.StaticText(self,label="Helping Others Climb", pos=(300, 260))
        self.other = wx.StaticText(self,label="Otherssss (Specify in comments)", pos=(300, 280))

        self.teleteam1ScaleInput = wx.RadioBox(self, pos=(450,155), choices=["0","1","2"])
        self.teleteam1SwitchInput = wx.RadioBox(self, pos=(450,175), choices=["0","1","2"])
        self.teleteam1ClimbInput = wx.RadioBox(self, pos=(450,195), choices=["0","1","2"])
        self.teleteam1ExchangeInput = wx.RadioBox(self, pos=(450,215), choices=["0","1","2"])
        self.teleteam1DefenseInput = wx.RadioBox(self, pos=(450,235), choices=["0","1","2"])
        self.teleteam1HelpingInput = wx.RadioBox(self, pos=(450,255), choices=["0","1","2"])

        self.teleteam2ScaleInput = wx.RadioBox(self, pos=(600,155), choices=["0","1","2"])
        self.teleteam2SwitchInput = wx.RadioBox(self, pos=(600,175), choices=["0","1","2"])
        self.teleteam2ClimbInput = wx.RadioBox(self, pos=(600,195), choices=["0","1","2"])
        self.teleteam2ExchangeInput = wx.RadioBox(self, pos=(600,215), choices=["0","1","2"])
        self.teleteam2DefenseInput = wx.RadioBox(self, pos=(600,235), choices=["0","1","2"])
        self.teleteam2HelpingInput = wx.RadioBox(self, pos=(600,255), choices=["0","1","2"])

        self.teleteam3ScaleInput = wx.RadioBox(self, pos=(750,155), choices=["0","1","2"])
        self.teleteam3SwitchInput = wx.RadioBox(self, pos=(750,175), choices=["0","1","2"])
        self.teleteam3ClimbInput = wx.RadioBox(self, pos=(750,195), choices=["0","1","2"])
        self.teleteam3ExchangeInput = wx.RadioBox(self, pos=(750,215), choices=["0","1","2"])
        self.teleteam3DefenseInput = wx.RadioBox(self, pos=(750,235), choices=["0","1","2"])
        self.teleteam3HelpingInput = wx.RadioBox(self, pos=(750,255), choices=["0","1","2"])

        self.teleteam1 = wx.StaticText(self, label="0000", pos=(485,130))
        self.teleteam2 = wx.StaticText(self, label="0000", pos=(630,130))
        self.teleteam3 = wx.StaticText(self, label="0000", pos=(785,130))

        self.endgame = wx.StaticText(self, label="End Game", pos=(20, 430))
        self.endgame.SetFont(self.boldFont)
        self.endteam1 = wx.StaticText(self, label="0000", pos=(20,450))
        self.endteam2 = wx.StaticText(self, label="0000", pos=(20,470))
        self.endteam3 = wx.StaticText(self, label="0000", pos=(20,490))

        self.endteam1Input = wx.RadioBox(self, pos=(65,445), choices=["Climb","isCarried","Climb + Carry","No climb at all"])
        self.endteam2Input = wx.RadioBox(self, pos=(65,465), choices=["Climb","isCarried","Climb + Carry","No climb at all"])
        self.endteam3Input = wx.RadioBox(self, pos=(65,485), choices=["Climb","isCarried","Climb + Carry","No climb at all"])
        self.endteam1Input.SetSelection(3)
        self.endteam2Input.SetSelection(3)
        self.endteam3Input.SetSelection(3)



        self.comments = wx.StaticText(self, label="Additional Comments?", pos=(20,530))
        self.commentsInput = wx.TextCtrl(self, pos=(20,550), size=(500, 20))

        self.submitButton = wx.Button(self, 10, "Submit Match Data!", pos=(550,600))

        self.submitButton.Bind(wx.EVT_BUTTON, self.CSV_OUTPUT)

    def Number_Change(self, event):
        btn = event.GetEventObject().GetName()
        if btn.endswith("InputUp"):
            textName = btn.replace("InputUp", "")
            num = int(eval("self."+textName+"Input").GetValue())
            eval("self."+textName+"Input").Clear()
            eval("self."+textName+"Input").AppendText(str(num + 1))
            if int(eval("self."+textName+"Input").GetValue()) < 0:
                eval("self."+textName+"Input").Clear()
                eval("self."+textName+"Input").AppendText("0")
        elif btn.endswith("InputDown"):
            textName = btn.replace("InputDown", "")
            num = int(eval("self."+textName+"Input").GetValue())
            eval("self."+textName+"Input").Clear()
            eval("self."+textName+"Input").AppendText(str(num - 1))
            if int(eval("self."+textName+"Input").GetValue()) < 0:
                eval("self."+textName+"Input").Clear()
                eval("self."+textName+"Input").AppendText("0")
        event.Skip()

    def Alliance_Match(self, event):
        self.allianceInput.Clear()
        divisionKey = divisionsDict[self.divisionInput.GetValue()]
        divisionAlliance = json.load(open(myPath + "//Alliances/"+ divisionKey +".json","r"))
        for i in range(0,len(divisionAlliance)):
            alliance = divisionAlliance[i]["name"]
            key = i+1
            allianceList = []
            for t in divisionAlliance[i]["picks"]:
                t = t.replace("frc","")
                alliance += "  " + t
                allianceList.append(t)
            allianceDict[key] = allianceList
            self.allianceInput.Append(alliance)
        # print allianceDict
            # print alliance

    def Auton_Config(self, event):
        self.team1.Clear()
        self.team2.Clear()
        self.team3.Clear()

        alliance = (self.allianceInput.GetSelection()) + 1
        # print alliance
        teams = allianceDict[alliance]
        for t in teams:
            self.team1.Append(t)
            self.team2.Append(t)
            self.team3.Append(t)

    def Team_Display(self, evetn):
        self.team1Title.SetLabel(self.team1.GetValue())
        self.team2Title.SetLabel(self.team2.GetValue())
        self.team3Title.SetLabel(self.team3.GetValue())
        self.endteam1.SetLabel(self.team1.GetValue())
        self.endteam2.SetLabel(self.team2.GetValue())
        self.endteam3.SetLabel(self.team3.GetValue())
        self.teleteam1.SetLabel(self.team1.GetValue())
        self.teleteam2.SetLabel(self.team2.GetValue())
        self.teleteam3.SetLabel(self.team3.GetValue())
        if self.team1.GetValue() == "":
            self.team1Title.SetLabel("0000")
        if self.team2.GetValue() == "":
            self.team2Title.SetLabel("0000")
        if self.team3.GetValue() == "":
            self.team3Title.SetLabel("0000")
        if self.team1.GetValue() == "":
            self.endteam1.SetLabel("0000")
        if self.team2.GetValue() == "":
            self.endteam2.SetLabel("0000")
        if self.team3.GetValue() == "":
            self.endteam3.SetLabel("0000")
        if self.team1.GetValue() == "":
            self.teleteam1.SetLabel("0000")
        if self.team2.GetValue() == "":
            self.teleteam2.SetLabel("0000")
        if self.team3.GetValue() == "":
            self.teleteam3.SetLabel("0000")

    def CSV_OUTPUT(self, event):

        filename = "ELIM_"+self.nameInput.GetValue()
        teamsPos = {self.team1.GetValue():1, self.team2.GetValue():2, self.team3.GetValue():3}
        match = self.matchLevel.GetValue() + self.matchLevelNum.GetValue() + "M" + self.matchNum.GetValue()
        # print match
        if not Path(myPath + "/ScoutingData", filename + '.csv').exists():
            with open(os.path.join(myPath + "/ScoutingData", filename + '.csv'), 'w') as csvfile:
                fieldnames = ['name','match','division','allianceNum','team','autonPos','autonSwitch','autonScale','teleScalePnt','teleSwitchPnt','teleClimbPnt','teleExchangePnt','teleDefensePnt','teleHelpingPnt','endgame','comments','timeStamp']

                writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
                writer.writeheader()
                for key in teamsPos:
                    # print key
                    autonSwitch = eval("self.team"+str(teamsPos[key])+"SwitchInput").GetValue()
                    autonScale = eval("self.team"+str(teamsPos[key])+"ScaleInput").GetValue()
                    # print autonSwitch, autonScale
                    teleScalePnt = eval("self.teleteam"+str(teamsPos[key])+"ScaleInput").GetSelection()
                    teleSwitchPnt = eval("self.teleteam"+str(teamsPos[key])+"SwitchInput").GetSelection()
                    teleClimbPnt = eval("self.teleteam"+str(teamsPos[key])+"ClimbInput").GetSelection()
                    teleExchangePnt = eval("self.teleteam"+str(teamsPos[key])+"ExchangeInput").GetSelection()
                    teleDefensePnt = eval("self.teleteam"+str(teamsPos[key])+"DefenseInput").GetSelection()
                    teleHelpingPnt = eval("self.teleteam"+str(teamsPos[key])+"HelpingInput").GetSelection()
                    # print teleScalePnt, teleSwitchPnt, teleClimbPnt, teleExchangePnt, teleDefensePnt, teleHelpingPnt

                    endgame = eval("self.endteam"+str(teamsPos[key])+"Input").GetItemLabel(eval("self.endteam"+str(teamsPos[key])+"Input").GetSelection())

                    writer.writerow({'name':self.nameInput.GetValue(),'match':match,'division':self.divisionInput.GetValue(),'allianceNum':(self.allianceInput.GetSelection()) + 1,'team':key,'autonPos':teamsPos[key],'autonSwitch':autonSwitch,'autonScale':autonScale,'teleScalePnt':teleScalePnt,'teleSwitchPnt':teleSwitchPnt,'teleClimbPnt':teleClimbPnt,'teleExchangePnt':teleExchangePnt,'teleDefensePnt':teleDefensePnt,'teleHelpingPnt':teleHelpingPnt,'endgame':endgame,'comments':self.commentsInput.GetValue(),'timeStamp':datetime.now().time()})
        else:
            with open(os.path.join(myPath + "/ScoutingData", filename + '.csv'), 'a') as csvfile:
                fieldnames = ['name','match','division','allianceNum','team','autonPos','autonSwitch','autonScale','teleScalePnt','teleSwitchPnt','teleClimbPnt','teleExchangePnt','teleDefensePnt','teleHelpingPnt','endgame','comments','timeStamp']

                writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
                # writer.writeheader()
                for key in teamsPos:
                    # print key
                    autonSwitch = eval("self.team"+str(teamsPos[key])+"SwitchInput").GetValue()
                    autonScale = eval("self.team"+str(teamsPos[key])+"ScaleInput").GetValue()
                    # print autonSwitch, autonScale
                    teleScalePnt = eval("self.teleteam"+str(teamsPos[key])+"ScaleInput").GetSelection()
                    teleSwitchPnt = eval("self.teleteam"+str(teamsPos[key])+"SwitchInput").GetSelection()
                    teleClimbPnt = eval("self.teleteam"+str(teamsPos[key])+"ClimbInput").GetSelection()
                    teleExchangePnt = eval("self.teleteam"+str(teamsPos[key])+"ExchangeInput").GetSelection()
                    teleDefensePnt = eval("self.teleteam"+str(teamsPos[key])+"DefenseInput").GetSelection()
                    teleHelpingPnt = eval("self.teleteam"+str(teamsPos[key])+"HelpingInput").GetSelection()
                    # print teleScalePnt, teleSwitchPnt, teleClimbPnt, teleExchangePnt, teleDefensePnt, teleHelpingPnt

                    endgame = eval("self.endteam"+str(teamsPos[key])+"Input").GetItemLabel(eval("self.endteam"+str(teamsPos[key])+"Input").GetSelection())
                    writer.writerow({'name':self.nameInput.GetValue(),'match':match,'division':self.divisionInput.GetValue(),'allianceNum':(self.allianceInput.GetSelection()) + 1,'team':key,'autonPos':teamsPos[key],'autonSwitch':autonSwitch,'autonScale':autonScale,'teleScalePnt':teleScalePnt,'teleSwitchPnt':teleSwitchPnt,'teleClimbPnt':teleClimbPnt,'teleExchangePnt':teleExchangePnt,'teleDefensePnt':teleDefensePnt,'teleHelpingPnt':teleHelpingPnt,'endgame':endgame,'comments':self.commentsInput.GetValue(),'timeStamp':datetime.now().time()})

        #Resets
        self.team1.Clear()
        self.team2.Clear()
        self.team3.Clear()
        self.allianceInput.Clear()
        divisionKey = divisionsDict[self.divisionInput.GetValue()]
        divisionAlliance = json.load(open(myPath + "//Alliances/"+ divisionKey +".json","r"))
        for i in range(0,len(divisionAlliance)):
            alliance = divisionAlliance[i]["name"]
            key = i+1
            allianceList = []
            for t in divisionAlliance[i]["picks"]:
                t = t.replace("frc","")
                alliance += "  " + t
                allianceList.append(t)
            allianceDict[key] = allianceList
            self.allianceInput.Append(alliance)

        self.team1ScaleInput.SetValue("0")
        self.team2ScaleInput.SetValue("0")
        self.team3ScaleInput.SetValue("0")
        self.team1SwitchInput.SetValue("0")
        self.team2SwitchInput.SetValue("0")
        self.team3SwitchInput.SetValue("0")
        self.teleteam1ScaleInput.SetSelection(0)
        self.teleteam1SwitchInput.SetSelection(0)
        self.teleteam1ClimbInput.SetSelection(0)
        self.teleteam1ExchangeInput.SetSelection(0)
        self.teleteam1DefenseInput.SetSelection(0)
        self.teleteam1HelpingInput.SetSelection(0)

        self.teleteam2ScaleInput.SetSelection(0)
        self.teleteam2SwitchInput.SetSelection(0)
        self.teleteam2ClimbInput.SetSelection(0)
        self.teleteam2ExchangeInput.SetSelection(0)
        self.teleteam2DefenseInput.SetSelection(0)
        self.teleteam2HelpingInput.SetSelection(0)

        self.teleteam3ScaleInput.SetSelection(0)
        self.teleteam3SwitchInput.SetSelection(0)
        self.teleteam3ClimbInput.SetSelection(0)
        self.teleteam3ExchangeInput.SetSelection(0)
        self.teleteam3DefenseInput.SetSelection(0)
        self.teleteam3HelpingInput.SetSelection(0)
        self.endteam1Input.SetSelection(3)
        self.endteam2Input.SetSelection(3)
        self.endteam3Input.SetSelection(3)
        self.commentsInput.Clear()
        # self.dompic.SetSize((900,700))
        self.dompic.Hide()

        n = random.randint(0,100)
        print n
        if n <= 15:
            self.dompic.Show()




app = wx.App(False)
frame = wx.Frame(None, title = "1218 Vulcan Scouting 2018 - Detroit ELIM", size = (900, 700))
panel = Panel(frame)
frame.Show()
app.MainLoop()
